import React, { useState, useRef } from 'react';

import { GetServerSideProps } from 'next';

// Import components
import { Meta } from '../../layout/Meta';
import { Main } from '../../templates/Main';
import { IAppConfig, getDataConfig } from '../../utils/Content';

interface PricingCard {
  id: string;
  title: string;
  subtitle: string;
  duration: string;
  classType: string;
  features: string[];
  ctaText: string;
  image: string;
  icon: string;
  badge?: string;
}

interface FAQ {
  question: string;
  answer: string;
}

interface Testimonial {
  name: string;
  role: string;
  content: string;
  avatar: string;
  rating: number;
}

const HocPhiPage = ({ appConfig }: { appConfig: IAppConfig }) => {
  const [activeTab, setActiveTab] = useState<'individual' | 'corporate'>(
    'individual'
  );
  const [openFAQ, setOpenFAQ] = useState<number | null>(null);
  const heroRef = useRef<HTMLDivElement>(null);

  const pricingCards: PricingCard[] = [
    {
      id: 'ielts',
      title: 'H·ªçc thu·∫≠t & Ch·ª©ng ch·ªâ qu·ªëc t·∫ø',
      subtitle: 'Ch·ª©ng ch·ªâ qu·ªëc t·∫ø ‚Äì B∆∞·ªõc ƒë·ªám ƒë·ªÉ ƒëi xa h∆°n',
      duration: '2 gi·ªù/bu·ªïi, 3 bu·ªïi/tu·∫ßn',
      classType: 'Nh√≥m nh·ªè <10 h·ªçc vi√™n | 1:1 theo y√™u c·∫ßu',
      features: [
        'L·ªô tr√¨nh c√° nh√¢n h√≥a: IELTS 5.5‚Äì7.5+, PET B1, APTIS CEFR',
        '80% luy·ªán ƒë·ªÅ th·ª±c chi·∫øn ‚Äì 20% chi·∫øn l∆∞·ª£c h·ªçc t·ªëi ∆∞u',
        'Feedback chi ti·∫øt Speaking & Writing',
        'Mock test ƒë·ªãnh k·ª≥ ƒëo l∆∞·ªùng ti·∫øn b·ªô',
        'H·ªó tr·ª£ k·∫øt n·ªëi doanh nghi·ªáp & gi·ªõi thi·ªáu vi·ªác l√†m',
      ],

      ctaText: 'ƒêƒÉng k√Ω test ƒë·∫ßu v√†o',
      image:
        'https://images.unsplash.com/photo-1434030216411-0b793f4b4173?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&q=80',
      icon: 'üéì',
      badge: 'Ph·ªï bi·∫øn',
    },
    {
      id: 'celpip',
      title: 'CELPIP ‚Äì ƒê·ªãnh c∆∞ Canada',
      subtitle: 'CLB 7‚Äì9+ ‚Äì C√°nh c·ª≠a ƒë·ªãnh c∆∞',
      duration: '2 gi·ªù/bu·ªïi, 3 bu·ªïi/tu·∫ßn',
      classType: 'Nh√≥m nh·ªè <10 h·ªçc vi√™n | 1:1 theo y√™u c·∫ßu',
      features: [
        'Gi√°o tr√¨nh Paragon Official',
        'Luy·ªán 4 k·ªπ nƒÉng & mock test chu·∫©n gi√°m kh·∫£o',
        'L·ªô tr√¨nh t·∫≠p trung CLB 7‚Äì9+ cho PR/Work Permit',
        'Gi·∫£ng vi√™n chuy√™n m√¥n cao, ch·∫•m chi ti·∫øt',
        'H·ªá sinh th√°i h·ªó tr·ª£ h·ªì s∆° v√† vi·ªác l√†m Canada',
      ],
      ctaText: 'ƒê·∫∑t l·ªãch test CELPIP',
      image:
        'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&q=80',
      icon: 'üçÅ',
      badge: 'ƒê·ªãnh c∆∞',
    },
    {
      id: 'corporate',
      title: 'Ti·∫øng Anh Doanh Nghi·ªáp',
      subtitle: 'N√¢ng chu·∫©n nh√¢n s·ª± ‚Äì K·∫øt n·ªëi doanh nghi·ªáp',
      duration: '2 gi·ªù/bu·ªïi, 3 bu·ªïi/tu·∫ßn',
      classType: 'Nh√≥m nh·ªè <10 h·ªçc vi√™n | 1:1 | In‚Äëhouse',
      features: [
        'Thi·∫øt k·∫ø theo ph√≤ng ban (Sales, HR, Finance, Marketing)',
        'H·ªçc tr√™n email, b√°o c√°o, proposal th·∫≠t',
        'HR Dashboard & Pre/Post Assessment',
        'Mentor doanh nghi·ªáp: thuy·∫øt tr√¨nh, ƒë√†m ph√°n th·ª±c chi·∫øn',
        'K·∫øt n·ªëi m·∫°ng l∆∞·ªõi doanh nghi·ªáp TN7 EDU',
      ],
      ctaText: 'Ch∆∞∆°ng tr√¨nh doanh nghi·ªáp',
      image:
        'https://images.unsplash.com/photo-1552664730-d307ca884978?ixlib=rb-4.0.3&auto=format&fit=crop&w=1200&q=80',
      icon: 'üíº',
      badge: 'Doanh nghi·ªáp',
    },
  ];

  const individualFAQs: FAQ[] = [
    {
      question: 'H·ªçc ph√≠ c√°c kh√≥a h·ªçc IELTS, CELPIP nh∆∞ th·∫ø n√†o?',
      answer:
        'H·ªçc ph√≠ thay ƒë·ªïi theo g√≥i (nh√≥m/1:1) v√† th·ªùi l∆∞·ª£ng. Li√™n h·ªá ƒë·ªÉ nh·∫≠n b√°o gi√° chi ti·∫øt v√† ∆∞u ƒë√£i.',
    },
    {
      question: 'C√≥ ch√≠nh s√°ch ho√†n ti·ªÅn kh√¥ng?',
      answer:
        'C√≥ ch√≠nh s√°ch ho√†n ti·ªÅn trong 7 ng√†y ƒë·∫ßu theo ƒëi·ªÅu kho·∫£n cam k·∫øt ch·∫•t l∆∞·ª£ng.',
    },
    {
      question: 'C√≥ th·ªÉ tr·∫£ g√≥p h·ªçc ph√≠ kh√¥ng?',
      answer:
        'C√≥, h·ªó tr·ª£ tr·∫£ g√≥p linh ho·∫°t 0% cho c√°c kh√≥a d√†i h·∫°n ‚Äî li√™n h·ªá ƒë·ªÉ bi·∫øt chi ti·∫øt.',
    },
    {
      question: 'H·ªçc ph√≠ c√≥ bao g·ªìm t√†i li·ªáu kh√¥ng?',
      answer:
        'C√≥. H·ªçc ph√≠ bao g·ªìm gi√°o tr√¨nh, t√†i li·ªáu, mock test v√† quy·ªÅn truy c·∫≠p n·ªÅn t·∫£ng h·ªçc online.',
    },
  ];

  const corporateFAQs: FAQ[] = [
    {
      question: 'B√°o gi√° kh√≥a Corporate English cho doanh nghi·ªáp?',
      answer:
        'B√°o gi√° t√πy theo s·ªë l∆∞·ª£ng h·ªçc vi√™n v√† th·ªùi l∆∞·ª£ng; c√≥ ∆∞u ƒë√£i cho h·ª£p ƒë·ªìng d√†i h·∫°n.',
    },
    {
      question: '∆Øu ƒë√£i cho doanh nghi·ªáp?',
      answer:
        'Doanh nghi·ªáp nh·∫≠n ∆∞u ƒë√£i theo quy m√¥ l·ªõp v√† th·ªùi gian h·ª£p t√°c ‚Äî li√™n h·ªá ƒë·ªÉ nh·∫≠n b·∫£ng gi√°.',
    },
    {
      question: 'H√¨nh th·ª©c thanh to√°n cho doanh nghi·ªáp?',
      answer:
        'Thanh to√°n b·∫±ng h√≥a ƒë∆°n VAT, chuy·ªÉn kho·∫£n; c√≥ th·ªÉ chia nhi·ªÅu ƒë·ª£t theo th·ªèa thu·∫≠n.',
    },
    {
      question: 'TN7 ƒëo l∆∞·ªùng ROI nh∆∞ th·∫ø n√†o?',
      answer:
        'S·ª≠ d·ª•ng HR Dashboard, Pre/Post Assessment v√† KPI ƒë√£ th·ªèa thu·∫≠n ƒë·ªÉ b√°o c√°o ROI ƒë√†o t·∫°o.',
    },
  ];

  const individualTestimonials: Testimonial[] = [
    {
      name: 'Nguy·ªÖn Minh Anh',
      role: 'Sinh vi√™n - IELTS 7.5',
      content:
        'T·ª´ 5.5 l√™n 7.5 trong 3 th√°ng. L·ªô tr√¨nh v√† feedback r·∫•t th·ª±c t·∫ø ‚Äî x·ª©ng ƒë√°ng.',
      avatar:
        'https://i.pinimg.com/736x/7e/46/c6/7e46c6d2798eff446b365c5246f4c9ca.jpg',
      rating: 5,
    },
    {
      name: 'Tr·∫ßn VƒÉn H√πng',
      role: 'K·ªπ s∆∞ - CELPIP CLB 8',
      content:
        'Kh√≥a CELPIP gi√∫p t√¥i ƒë·∫°t CLB 8 v√† ti·∫øn h√†nh h·ªì s∆° ƒë·ªãnh c∆∞ th√†nh c√¥ng.',
      avatar:
        'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&q=80',
      rating: 5,
    },
  ];

  const corporateTestimonials: Testimonial[] = [
    {
      name: 'L√™ Th·ªã Mai',
      role: 'HR Manager',
      content:
        'HR Dashboard r√µ r√†ng, nh√¢n vi√™n ti·∫øn b·ªô nhanh ‚Äî ROI ƒë√†o t·∫°o minh b·∫°ch.',
      avatar:
        'https://images.unsplash.com/photo-1580489944761-15a19d654956?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&q=80',
      rating: 5,
    },
    {
      name: 'Nguy·ªÖn VƒÉn ƒê·ª©c',
      role: 'CEO',
      content:
        'Ch∆∞∆°ng tr√¨nh Corporate gi√∫p team Sales giao ti·∫øp hi·ªáu qu·∫£ v·ªõi kh√°ch h√†ng qu·ªëc t·∫ø.',
      avatar:
        'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=150&q=80',
      rating: 5,
    },
  ];

  const currentFAQs =
    activeTab === 'individual' ? individualFAQs : corporateFAQs;
  const currentTestimonials =
    activeTab === 'individual' ? individualTestimonials : corporateTestimonials;

  return (
    <Main
      config={appConfig}
      meta={
        <Meta
          config={appConfig}
          title="H·ªçc Ph√≠ | TN7 EDU - English Programs"
          description="Chi ti·∫øt h·ªçc ph√≠ c√°c kh√≥a h·ªçc t·∫°i TN7 EDU. L·ªô tr√¨nh c√° nh√¢n h√≥a, g√≥i linh ho·∫°t."
        />
      }
    >
      <div className="min-h-screen bg-gray-50 text-gray-800 antialiased">
        {/* HERO */}
        <header
          ref={heroRef}
          className="relative overflow-hidden bg-gradient-to-br from-blue-700 to-indigo-800 text-white"
        >
          <div className="container mx-auto px-6 lg:px-12 py-20 flex flex-col lg:flex-row items-center gap-10">
            <div className="lg:w-7/12">
              <h4 className="text-1xl md:text-4xl font-extrabold leading-tight mb-4">
                H·ªåC PH√ç ‚Äî ƒê·∫¶U T∆Ø CHO T∆Ø∆†NG LAI
              </h4>
              <p className="text-lg text-blue-100 max-w-3xl mb-6">
                M·ª©c ph√≠ minh b·∫°ch, l·ªô tr√¨nh c√° nh√¢n h√≥a v√† cam k·∫øt ƒë·∫ßu ra. Ch·ªçn
                g√≥i ph√π h·ª£p ‚Äî nh·∫≠n t∆∞ v·∫•n mi·ªÖn ph√≠ ngay h√¥m nay.
              </p>

              <div className="flex flex-wrap gap-4">
                <a
                  href="#contact"
                  className="inline-flex items-center gap-3 bg-orange-500 hover:bg-orange-600 text-white px-6 py-3 rounded-lg font-semibold shadow-lg transition"
                >
                  Nh·∫≠n t∆∞ v·∫•n mi·ªÖn ph√≠
                </a>
                <a
                  href="#packages"
                  className="inline-flex items-center gap-3 border border-white/25 text-white px-6 py-3 rounded-lg hover:bg-white/10 transition"
                >
                  Xem c√°c g√≥i kh√≥a h·ªçc
                </a>
              </div>
            </div>

            <div className="lg:w-5/12 w-full">
              <div className="bg-white/8 backdrop-blur-sm border border-white/10 rounded-2xl p-6 shadow-xl">
                <div className="text-sm text-white/90 font-semibold">
                  T∆∞ v·∫•n mi·ªÖn ph√≠
                </div>
                <h3 className="text-2xl font-bold mt-2 mb-4">
                  Nh·∫≠n l·ªô tr√¨nh c√° nh√¢n h√≥a
                </h3>
                <p className="text-white/80 mb-6">
                  ƒêi·ªÅn th√¥ng tin ƒë·ªÉ nh·∫≠n t∆∞ v·∫•n v√† b√°o gi√° ph√π h·ª£p v·ªõi m·ª•c ti√™u
                  c·ªßa b·∫°n.
                </p>
                <button
                  onClick={() =>
                    window.open(
                      'https://forms.office.com/pages/responsepage.aspx?id=49VLlcom6kixf9heaFLo2U7609Va1UlOsx04CGxDmHBUNk9GQlRBVDc3S1NWS0FVMjdSMDROQlBHSSQlQCN0PWcu&route=shorturl',
                      '_blank'
                    )
                  }
                >
                  <a className="block text-center bg-white text-orange-600 font-bold py-3 rounded-lg shadow hover:scale-[1.02] transition">
                    ƒêƒÉng k√Ω t∆∞ v·∫•n
                  </a>
                </button>
              </div>
            </div>
          </div>
          <div className="pointer-events-none absolute inset-0">
            <div className="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1554224155-6726b3ff858f?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&q=80')] bg-cover opacity-10"></div>
          </div>
        </header>

        {/* PACKAGES */}
        <section id="packages" className="py-16">
          <div className="container mx-auto px-6 lg:px-12">
            <div className="text-center max-w-3xl mx-auto mb-10">
              <p className="text-sm text-orange-600 font-semibold uppercase">
                Chi ti·∫øt h·ªçc ph√≠
              </p>
              <h2 className="text-3xl md:text-4xl font-extrabold mt-3">
                C√°c ch∆∞∆°ng tr√¨nh ti√™u bi·ªÉu
              </h2>
              <p className="text-gray-600 mt-3">
                Ch·ªçn ch∆∞∆°ng tr√¨nh ph√π h·ª£p v·ªõi m·ª•c ti√™u c·ªßa b·∫°n ‚Äî c√≥ g√≥i nh√≥m v√†
                1:1.
              </p>
            </div>

            <div className="grid gap-8 md:grid-cols-2 lg:grid-cols-3 items-stretch">
              {pricingCards.map((card) => (
                <article
                  key={card.id}
                  className="flex flex-col bg-white rounded-2xl shadow-md overflow-hidden hover:shadow-xl transition"
                >
                  <div className="relative h-44 md:h-52 overflow-hidden flex-shrink-0">
                    <img
                      src={card.image}
                      alt={card.title}
                      loading="lazy"
                      className="w-full h-full object-cover"
                    />
                    <div className="absolute inset-0 bg-gradient-to-t from-black/40 to-transparent"></div>
                    <div className="absolute left-5 bottom-4">
                      <div className="text-3xl">{card.icon}</div>
                      <h3 className="text-xl text-white font-bold leading-tight">
                        {card.title}
                      </h3>
                    </div>
                    {card.badge && (
                      <div className="absolute top-4 right-4">
                        <span className="bg-gradient-to-r from-orange-500 to-red-500 text-white text-xs px-3 py-1 rounded-full">
                          {card.badge}
                        </span>
                      </div>
                    )}
                  </div>

                  <div className="p-6 flex-1 flex flex-col">
                    <p className="text-sm text-blue-600 font-semibold mb-3">
                      {card.subtitle}
                    </p>

                    <div className="flex items-center text-sm text-gray-600 gap-6 mb-4">
                      <div className="flex items-center gap-2">
                        <span>‚è∞</span>
                        <span>{card.duration}</span>
                      </div>
                      <div className="flex items-center gap-2">
                        <span>üë•</span>
                        <span>{card.classType}</span>
                      </div>
                    </div>

                    <ul className="grid gap-2 mb-6 text-gray-700 flex-1">
                      {card.features.slice(0, 5).map((f, i) => (
                        <li key={i} className="flex gap-3 items-start">
                          <span className="text-green-500 mt-1">‚úì</span>
                          <span className="text-sm leading-snug">{f}</span>
                        </li>
                      ))}
                    </ul>

                    <div className="mt-4">
                      <a
                        href="#contact"
                        className="w-full inline-flex items-center justify-center bg-gradient-to-r from-blue-600 to-indigo-600 text-white py-3 rounded-lg font-semibold shadow hover:scale-[1.02] transition"
                      >
                        {card.ctaText}
                      </a>
                    </div>
                  </div>
                </article>
              ))}
            </div>
          </div>
        </section>

        {/* FAQ & TESTIMONIALS */}
        <section className="py-16 bg-gray-50">
          <div className="container mx-auto px-6 lg:px-12">
            <div className="grid lg:grid-cols-2 gap-10 items-start">
              <div>
                <h3 className="text-2xl font-extrabold mb-4">
                  C√¢u h·ªèi th∆∞·ªùng g·∫∑p
                </h3>
                <div className="bg-white rounded-2xl shadow p-6">
                  <div className="flex gap-3 mb-6">
                    <button
                      onClick={() => setActiveTab('individual')}
                      className={`flex-1 py-3 rounded-lg font-semibold ${
                        activeTab === 'individual'
                          ? 'bg-blue-600 text-white'
                          : 'bg-gray-100 text-gray-700'
                      }`}
                    >
                      C√° nh√¢n
                    </button>
                    <button
                      onClick={() => setActiveTab('corporate')}
                      className={`flex-1 py-3 rounded-lg font-semibold ${
                        activeTab === 'corporate'
                          ? 'bg-blue-600 text-white'
                          : 'bg-gray-100 text-gray-700'
                      }`}
                    >
                      Doanh nghi·ªáp
                    </button>
                  </div>

                  <div>
                    {currentFAQs.map((faq, i) => (
                      <div key={i} className="border-b last:border-b-0 py-4">
                        <button
                          className="w-full text-left flex items-center justify-between font-medium text-gray-800"
                          onClick={() => setOpenFAQ(openFAQ === i ? null : i)}
                        >
                          <span>{faq.question}</span>
                          <span
                            className={`transform transition ${
                              openFAQ === i ? 'rotate-180' : ''
                            }`}
                          >
                            ‚ñº
                          </span>
                        </button>
                        {openFAQ === i && (
                          <p className="mt-3 text-gray-600">{faq.answer}</p>
                        )}
                      </div>
                    ))}
                  </div>
                </div>
              </div>

              <div>
                <h3 className="text-2xl font-extrabold mb-4">
                  C·∫£m nh·∫≠n h·ªçc vi√™n
                </h3>
                <div className="space-y-4">
                  {currentTestimonials.map((t, idx) => (
                    <div
                      key={idx}
                      className="bg-white rounded-xl p-5 shadow flex gap-4 items-start"
                    >
                      <img
                        src={t.avatar}
                        alt={t.name}
                        className="w-14 h-14 rounded-full object-cover flex-shrink-0"
                      />
                      <div>
                        <div className="flex items-center gap-3">
                          <h4 className="font-semibold">{t.name}</h4>
                          <span className="text-sm text-gray-500">
                            {t.role}
                          </span>
                        </div>
                        <p className="text-gray-700 mt-2 italic">{t.content}</p>
                        <div className="mt-2 text-yellow-500">
                          {'‚òÖ'.repeat(t.rating)}
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* CTA */}
        <section
          id="contact"
          className="py-16 bg-gradient-to-r from-orange-500 to-red-500 text-white"
        >
          <div className="container mx-auto px-6 lg:px-12 text-center">
            <h3 className="text-2xl md:text-3xl font-extrabold mb-3">
              Nh·∫≠n l·ªô tr√¨nh & t∆∞ v·∫•n h·ªçc ph√≠ mi·ªÖn ph√≠
            </h3>
            <p className="mb-6 text-orange-100">
              G·ª≠i th√¥ng tin ‚Äî ch√∫ng t√¥i s·∫Ω li√™n h·ªá v√† g·ª≠i l·ªô tr√¨nh c√° nh√¢n h√≥a
              c√πng b√°o gi√° ph√π h·ª£p.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <a
                className="bg-white text-orange-600 font-bold px-6 py-3 rounded-lg shadow"
                href="tel:+84123456789"
              >
                üí¨ H·ªèi th√™m qua Zalo/Hotline
              </a>
              <a
                className="border-2 border-white text-white px-6 py-3 rounded-lg font-bold"
                href="https://forms.office.com/pages/responsepage.aspx?id=49VLlcom6kixf9heaFLo2U7609Va1UlOsx04CGxDmHBUNk9GQlRBVDc3S1NWS0FVMjdSMDROQlBHSSQlQCN0PWcu&route=shorturl',
                      '_blank"
              >
                ƒêƒÉng k√Ω t∆∞ v·∫•n
              </a>
            </div>
          </div>
        </section>
      </div>

      <style jsx>{`
        .container {
          max-width: 1200px;
        }
        @media (min-width: 1024px) {
          .container {
            max-width: 1180px;
          }
        }
      `}</style>
    </Main>
  );
};

export const getServerSideProps: GetServerSideProps = async () => {
  const appConfig = getDataConfig();

  return {
    props: {
      appConfig,
    },
  };
};

export default HocPhiPage;
